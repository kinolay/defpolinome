from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
import psycopg2
from datetime import date
import numpy as np
import json


    # Подбор коэффициентов полиномиальной модели регрессии
def polynomial_regression(x, y, degree):
    # Преобразование входных параметров в полиномиальные
    polynomial_features = PolynomialFeatures(degree=degree, include_bias=False)
    x_poly = polynomial_features.fit_transform(x.reshape(-1, 1))

    # Создание и обучение модели линейной регрессии
    model = LinearRegression()
    model.fit(x_poly, y)
    predict = model.predict(x_poly)

    return model.coef_, model.intercept_, predict


    # Факт запуска фунции polynomial_regression сохраняется в БД
def save_execution_result(x, y, degree):

    coefficients, intercept, predict = polynomial_regression(x, y, degree)

    connection = psycopg2.connect(host='127.0.0.1', port='5432', database='testdb', user='postgres', password='123456')
    cursor = connection.cursor()
    print("Подключение установлено")

    # Ввод данных
    execution_date = date.today()
    function_name = "polynomial_regression"
    function_arguments = json.dumps({"x": x.tolist(), "y": y.tolist(), "degree": degree})
    function_results = json.dumps({"coef": coefficients.tolist(), "intercept": str(intercept), "predict": predict.tolist()})
    error_message = ""

    try:
        # Добавление данных
        insert_query = "INSERT INTO function_runs (launch_date, function_name, function_arguments, function_result, error_text) VALUES (%s, %s, %s, %s, %s);"
        cursor.execute(insert_query, (execution_date, function_name, function_arguments, function_results, error_message,))
        connection.commit()
        print("save")

    except Exception as e:
        error_message = str(e)
        connection.rollback()

    finally:

        cursor.close()
        connection.close()
